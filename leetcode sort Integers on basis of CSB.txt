class Solution {
        
    public int CSB(int n){

        int count=0;

        while(n > 0){

            if((n&1)==1)
                count++;
         
            n = n >> 1;

        }
        return count;
    }

    public int[] sortByBits(int[] arr) {

        Map<Integer,Integer> map = new HashMap<>();

        int size = arr.length;

        for(int i = 0 ; i < size; i++){

            map.put(arr[i],CSB(arr[i]));

        }
         
        List<Map.Entry<Integer, Integer>> list = new LinkedList<Map.Entry<Integer, Integer>>(map.entrySet());

         Collections.sort(list, new Comparator<Map.Entry<Integer, Integer> >() {
            public int compare(Map.Entry<Integer, Integer> o1, 
                               Map.Entry<Integer, Integer> o2)
            {
                if(o1.getValue().equals(o2.getValue()))
                    return (o1.getKey()).compareTo(o2.getKey());
                return (o1.getValue()).compareTo(o2.getValue());
            }
            
            });
        
        ArrayList<Integer> arraylist = new ArrayList<>();

        for(Map.Entry<Integer,Integer> i : list){
            arraylist.add(i.getKey());
        }


        int[] array = arraylist.stream().mapToInt(i -> i).toArray();

        return array;
        
        }

    }